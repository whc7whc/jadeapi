@model Team.Backend.Models.ViewModels.OrderStatisticsViewModel
@{
    ViewData["Title"] = "訂單統計分析";
}

<div class="container-fluid">
    <!-- 頁面標題 -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">
            <i class="fas fa-shopping-cart text-info"></i> 訂單統計分析
        </h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/AdminFinance">財務中心</a></li>
                <li class="breadcrumb-item active">訂單統計</li>
            </ol>
        </nav>
    </div>

    <!-- 訂單總覽卡片 - 5個卡片在同一排 -->
    <div class="row">
        <!-- 今日訂單 -->
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">今日訂單</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TodayOrdersCount</div>
                            <div class="text-xs text-info">
                                <i class="fas fa-calendar-day"></i> 即時統計
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-file-invoice fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 待處理訂單 -->
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">待處理訂單</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.PendingOrdersCount</div>
                            <div class="text-xs text-danger">
                                <i class="fas fa-exclamation-triangle"></i> 需要處理
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 平均訂單金額 -->
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">平均訂單金額</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">NT$ @Model.AverageOrderValue.ToString("N0")</div>
                            <div class="text-xs text-success">
                                <i class="fas fa-dollar-sign"></i> 本月平均
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 訂單完成率 -->
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">訂單完成率</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">@Model.OrderCompletionRate.ToString("F1")%</div>
                                </div>
                                <div class="col">
                                    <div class="progress progress-sm mr-2">
                                        <div class="progress-bar bg-info" role="progressbar" style="width: @Model.OrderCompletionRate%"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 退貨率分析 -->
        <div class="col-xl-2 col-lg-4 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">退貨率</div>
                            <div class="h4 mb-0 font-weight-bold text-gray-800">@Model.ReturnRate.ToString("F1")%</div>
                            <div class="text-xs">
                                @if (Model.ReturnRate < 5)
                                {
                                    <span class="text-success"><i class="fas fa-check"></i> 良好</span>
                                }
                                else if (Model.ReturnRate < 10)
                                {
                                    <span class="text-warning"><i class="fas fa-exclamation"></i> 注意</span>
                                }
                                else
                                {
                                    <span class="text-danger"><i class="fas fa-times"></i> 過高</span>
                                }
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-undo fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 訂單趨勢圖表 -->
    <div class="row">
        <div class="col-xl-8 col-lg-7">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-chart-line"></i> 訂單趨勢分析 (近7天)
                    </h6>
                </div>
                <div class="card-body">
                    <div class="chart-area" style="height: 320px;">
                        <canvas id="orderTrendChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- 訂單狀態圓餅圖 -->
        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-chart-pie"></i> 訂單狀態分布
                    </h6>
                </div>
                <div class="card-body">
                    <canvas id="orderStatusChart"></canvas>
                    <div class="mt-4 text-center small">
                        @if (Model.OrderStatusDistribution != null && Model.OrderStatusDistribution.Any())
                        {
                            @foreach (var status in Model.OrderStatusDistribution.Take(4))
                            {
                                <span class="mr-2">
                                    <i class="fas fa-circle" style="color: @status.Color"></i> 
                                    @status.Status (@status.Percentage.ToString("F1")%)
                                </span>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 訂單詳細分析 -->
    <div class="row">
        <!-- 訂單時段分析 -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-clock"></i> 訂單時段分析
                    </h6>
                </div>
                <div class="card-body">
                    <canvas id="orderTimeChart"></canvas>
                </div>
            </div>
        </div>

        <!-- 退貨詳細分析 -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-undo"></i> 退貨詳細分析
                    </h6>
                </div>
                <div class="card-body">
                    <div class="text-center py-4">
                        <div class="h1 font-weight-bold text-danger">@Model.ReturnRate.ToString("F1")%</div>
                        <div class="h5 text-muted">當月退貨率</div>
                        <div class="mt-3">
                            @if (Model.ReturnRate < 5)
                            {
                                <span class="badge badge-success"><i class="fas fa-check"></i> 良好</span>
                            }
                            else if (Model.ReturnRate < 10)
                            {
                                <span class="badge badge-warning"><i class="fas fa-exclamation"></i> 注意</span>
                            }
                            else
                            {
                                <span class="badge badge-danger"><i class="fas fa-times"></i> 過高</span>
                            }
                        </div>
                        <hr class="my-4">
                        <div class="row">
                            <div class="col-6">
                                <div class="text-center">
                                    <div class="h4 font-weight-bold text-primary">@Model.TotalOrders</div>
                                    <div class="text-xs text-muted">總訂單數</div>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="text-center">
                                    <div class="h4 font-weight-bold text-danger">@((int)(Model.TotalOrders * Model.ReturnRate / 100))</div>
                                    <div class="text-xs text-muted">退貨數量</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 統計摘要 -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-chart-bar"></i> 訂單統計摘要
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="text-center">
                                <div class="h4 font-weight-bold text-primary">@Model.TotalOrders</div>
                                <div class="text-xs text-uppercase">總訂單數</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <div class="h4 font-weight-bold text-success">NT$ @Model.TotalRevenue.ToString("N0")</div>
                                <div class="text-xs text-uppercase">總營收</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <div class="h4 font-weight-bold text-info">@Model.CompletedOrders</div>
                                <div class="text-xs text-uppercase">完成訂單</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <div class="h4 font-weight-bold text-warning">@Model.CanceledOrders</div>
                                <div class="text-xs text-uppercase">取消訂單</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// 等待頁面載入完成
document.addEventListener('DOMContentLoaded', function() {
    // 檢查 Chart.js 是否載入
    if (typeof Chart === 'undefined') {
        console.error('Chart.js 未載入');
        return;
    }

    // 工具函式：確保資料為陣列格式
    function ensureArray(data) {
        if (typeof data === 'string') {
            try {
                return JSON.parse(data);
            } catch (e) {
                console.error('JSON 解析失敗:', e);
                return [];
            }
        }
        return Array.isArray(data) ? data : [];
    }

    // 工具函式：安全的顏色處理
    function safeColor(color, fallback = '#6c757d') {
        if (!color || typeof color !== 'string') return fallback;
        return color.trim();
    }

    // 工具函式：生成 hover 顏色
    function generateHoverColor(color, fallback = '#6c757d') {
        const safeCol = safeColor(color, fallback);
        
        // 檢查是否為 hex 格式
        if (/^#([0-9A-F]{3}){1,2}$/i.test(safeCol)) {
            const hex = safeCol.slice(1);
            const fullHex = hex.length === 3 ? hex.split('').map(x => x + x).join('') : hex;
            const r = parseInt(fullHex.slice(0, 2), 16);
            const g = parseInt(fullHex.slice(2, 4), 16);
            const b = parseInt(fullHex.slice(4, 6), 16);
            return `rgba(${r}, ${g}, ${b}, 0.8)`;
        }
        
        // 如果已經是 rgba 或其他格式，保持原樣
        return safeCol;
    }

    // 預設調色盤
    const defaultColors = ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b', '#858796', '#5a5c69'];

    // 訂單趨勢圖表
    const orderTrendCtx = document.getElementById('orderTrendChart');
    if (orderTrendCtx) {
        const rawTrendData = @Html.Raw(Json.Serialize(Model.DailyOrderTrend));
        const trendData = ensureArray(rawTrendData);
        console.log('DailyOrderTrend data:', trendData);
        
        if (trendData.length > 0) {
            // 修正屬性名稱 - 使用 PascalCase
            const labels = trendData.map(item => item.Date || item.date || '');
            const orderCounts = trendData.map(item => item.OrderCount || item.orderCount || 0);
            const completedCounts = trendData.map(item => item.CompletedCount || item.completedCount || 0);

            new Chart(orderTrendCtx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '訂單數量',
                        data: orderCounts,
                        borderColor: 'rgb(78, 115, 223)',
                        backgroundColor: 'rgba(78, 115, 223, 0.1)',
                        tension: 0.3,
                        fill: true
                    }, {
                        label: '完成訂單',
                        data: completedCounts,
                        borderColor: 'rgb(28, 200, 138)',
                        backgroundColor: 'rgba(28, 200, 138, 0.1)',
                        tension: 0.3,
                        fill: false
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } else {
            orderTrendCtx.parentElement.innerHTML = `
                <div class="text-center py-5">
                    <i class="fas fa-chart-line fa-3x text-muted mb-3"></i>
                    <p class="text-muted">暫無趨勢數據</p>
                </div>
            `;
        }
    }

    // 訂單狀態圓餅圖
    const orderStatusCtx = document.getElementById('orderStatusChart');
    if (orderStatusCtx) {
        const rawStatusData = @Html.Raw(Json.Serialize(Model.OrderStatusDistribution));
        const statusData = ensureArray(rawStatusData);
        console.log('OrderStatusDistribution data:', statusData);
        
        if (statusData.length > 0) {
            // 修正屬性名稱 - 使用 PascalCase 並提供預設值
            const labels = statusData.map(item => item.Status || item.status || '未知');
            const data = statusData.map(item => item.Count || item.count || 0);
            const colors = statusData.map((item, index) => 
                safeColor(item.Color || item.color, defaultColors[index % defaultColors.length])
            );
            const hoverColors = colors.map(color => generateHoverColor(color));

            new Chart(orderStatusCtx, {
                type: 'doughnut',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: colors,
                        hoverBackgroundColor: hoverColors,
                        borderWidth: 2,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw || 0;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = total > 0 ? ((value / total) * 100).toFixed(1) : '0';
                                    return `${label}: ${value} (${percentage}%)`;
                                }
                            }
                        }
                    }
                }
            });
        } else {
            orderStatusCtx.parentElement.innerHTML = `
                <div class="text-center py-5">
                    <i class="fas fa-chart-pie fa-3x text-muted mb-3"></i>
                    <p class="text-muted">暫無訂單狀態數據</p>
                </div>
            `;
        }
    }

    // 訂單時段分析圖表
    const orderTimeCtx = document.getElementById('orderTimeChart');
    if (orderTimeCtx) {
        const rawTimeData = @Html.Raw(Json.Serialize(Model.OrderTimeDistribution));
        const timeData = ensureArray(rawTimeData);
        console.log('OrderTimeDistribution data:', timeData);
        
        if (timeData.length > 0) {
            // 後端現在回的是區間字串（例："00-06"、"06-12"...），直接用即可
            const labels = timeData.map(item => (item.Hour ?? item.hour ?? '').toString());
            const data = timeData.map(item => Number(item.OrderCount ?? item.orderCount ?? 0));
            const colors = labels.map((_, index) => defaultColors[index % defaultColors.length]);

            new Chart(orderTimeCtx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '訂單數量',
                        data: data,
                        backgroundColor: colors
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } else {
            orderTimeCtx.parentElement.innerHTML = `
                <div class="text-center py-5">
                    <i class="fas fa-clock fa-3x text-muted mb-3"></i>
                    <p class="text-muted">暫無時段數據</p>
                </div>
            `;
        }
    }
});
</script>