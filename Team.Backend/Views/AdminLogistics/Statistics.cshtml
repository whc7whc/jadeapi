@using Team.Backend.Models.ViewModels.Logistics
@model LogisticsStatisticsVm

@{
    ViewData["Title"] = "物流統計";
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h3 class="m-0">
        <i class="fas fa-chart-bar text-warning"></i>
        物流統計報表
    </h3>
    <div>
        <a href="@Url.Action("Index")" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> 返回列表
        </a>
        <button class="btn btn-info" onclick="refreshData()">
            <i class="fas fa-sync-alt"></i> 重新整理
        </button>
    </div>
</div>

<!-- 統計摘要卡片 -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6">
        <div class="card text-white bg-primary">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.TotalOrders</h4>
                        <p class="card-text">總訂單數</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-shopping-cart fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-md-6">
        <div class="card text-white bg-success">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">$@Model.TotalRevenue.ToString("N0")</h4>
                        <p class="card-text">總運費收入</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-dollar-sign fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-md-6">
        <div class="card text-white bg-info">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">$@Model.AverageShippingFee.ToString("N0")</h4>
                        <p class="card-text">平均運費</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-calculator fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-md-6">
        <div class="card text-white bg-warning">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="card-title">@Model.CarrierStats.Count</h4>
                        <p class="card-text">物流商數量</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-truck fa-2x"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- 物流商使用統計 -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-chart-pie"></i>
                    物流商使用統計
                </h5>
            </div>
            <div class="card-body">
                @if (Model.CarrierStats.Any())
                {
                    <canvas id="carrierChart" width="400" height="200"></canvas>
                    
                    <div class="mt-3">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>物流商</th>
                                    <th>訂單數</th>
                                    <th>收入</th>
                                    <th>佔比</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var stat in Model.CarrierStats.OrderByDescending(s => s.OrderCount))
                                {
                                    <tr>
                                        <td>@stat.CarrierName</td>
                                        <td>@stat.OrderCount</td>
                                        <td>$@stat.TotalRevenue.ToString("N0")</td>
                                        <td>@stat.UsagePercentage.ToString("F1")%</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-chart-pie fa-3x mb-3"></i>
                        <p>目前沒有統計資料</p>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <!-- 地區配送統計 -->
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-map-marked-alt"></i>
                    地區配送統計 (前10名)
                </h5>
            </div>
            <div class="card-body">
                @if (Model.RegionStats.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>排名</th>
                                    <th>地區</th>
                                    <th>訂單數</th>
                                    <th>平均運費</th>
                                    <th>主要物流商</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var rank = 1;
                                }
                                @foreach (var region in Model.RegionStats.Take(10))
                                {
                                    <tr>
                                        <td>
                                            @if (rank <= 3)
                                            {
                                                <span class="badge badge-@(rank == 1 ? "warning" : rank == 2 ? "secondary" : "info")">
                                                    @rank
                                                </span>
                                            }
                                            else
                                            {
                                                <span>@rank</span>
                                            }
                                        </td>
                                        <td>@region.RegionName</td>
                                        <td>
                                            <span class="badge badge-primary">@region.OrderCount</span>
                                        </td>
                                        <td>$@region.AvgShippingFee.ToString("N0")</td>
                                        <td>
                                            <small class="text-muted">@region.TopCarrier</small>
                                        </td>
                                    </tr>
                                    rank++;
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center text-muted py-5">
                        <i class="fas fa-map-marked-alt fa-3x mb-3"></i>
                        <p>目前沒有地區統計資料</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- 更新時間 -->
<div class="row mt-3">
    <div class="col-12">
        <div class="card">
            <div class="card-body text-center">
                <small class="text-muted">
                    <i class="fas fa-clock"></i>
                    最後更新時間：@Model.LastUpdateTime.ToString("yyyy-MM-dd HH:mm:ss")
                </small>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Layout 已載入 Chart.js v3.9.1，移除重複載入避免版本衝突 -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // 重新整理按鈕方法
            window.refreshData = function () { location.reload(); };
            
            // 除錯：顯示 Model 的完整資訊
            console.log('Model CarrierStats:', @Html.Raw(Json.Serialize(Model.CarrierStats)));
            console.log('Model.CarrierStats.Count:', @Model.CarrierStats.Count);
            console.log('Model.TotalOrders:', @Model.TotalOrders);
            console.log('Model.AverageShippingFee:', @Model.AverageShippingFee);
            console.log('Model.TotalRevenue:', @Model.TotalRevenue);
            
            // 檢查是否有資料
            var hasData = @Html.Raw(Model.CarrierStats.Any() ? "true" : "false");
            console.log('HasData:', hasData, 'CarrierStats count:', @Model.CarrierStats.Count);
            
            if (hasData) {
                try {
                    // 手動建立資料陣列
                    var chartData = [];
                    var chartLabels = [];
                    
                    @foreach (var stat in Model.CarrierStats)
                    {
                        <text>
                        chartLabels.push('@Html.Raw(stat.CarrierName)');
                        chartData.push(@stat.OrderCount);
                        console.log('Adding data:', '@Html.Raw(stat.CarrierName)', @stat.OrderCount, 'Revenue:', @stat.TotalRevenue);
                        </text>
                    }
                    
                    console.log('Final chart labels:', chartLabels);
                    console.log('Final chart data:', chartData);
                    
                    var ctx = document.getElementById('carrierChart');
                    if (ctx) {
                        new Chart(ctx, {
                            type: 'doughnut',
                            data: {
                                labels: chartLabels,
                                datasets: [{
                                    data: chartData,
                                    backgroundColor: [
                                        '#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF','#FF9F40','#FF9F80','#C9CBCF'
                                    ],
                                    borderWidth: 2,
                                    borderColor: '#fff',
                                    hoverBorderWidth: 3,
                                    hoverOffset: 4
                                }]
                            },
                            options: {
                                plugins: {
                                    legend: { position: 'bottom', labels: { usePointStyle: true, padding: 20 } },
                                    tooltip: {
                                        callbacks: {
                                            label: function (context) {
                                                var label = context.label || '';
                                                var value = context.parsed;
                                                var total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                var percent = total ? ((value / total) * 100).toFixed(1) : 0;
                                                return label + ': ' + value + ' (' + percent + '%)';
                                            }
                                        }
                                    }
                                },
                                responsive: true,
                                maintainAspectRatio: true,
                                animation: { animateRotate: true, animateScale: true }
                            }
                        });
                        console.log('Chart created successfully with data:', chartData);
                    } else {
                        console.error('Canvas element not found');
                    }
                } catch (error) {
                    console.error('Error creating chart:', error);
                }
            } else {
                console.log('No data available for chart - showing empty state');
                // 顯示無資料的狀態
                var ctx = document.getElementById('carrierChart');
                if (ctx) {
                    // 移除 canvas，顯示無資料訊息
                    ctx.parentElement.innerHTML = `
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-chart-pie fa-3x mb-3"></i>
                            <p>目前沒有物流統計資料</p>
                            <small class="text-muted">當系統有訂單資料時，此處將顯示物流商使用統計圖表</small>
                        </div>
                    `;
                }
            }
            
            // 五分鐘自動刷新
            setInterval(refreshData, 300000);
        });
    </script>
}